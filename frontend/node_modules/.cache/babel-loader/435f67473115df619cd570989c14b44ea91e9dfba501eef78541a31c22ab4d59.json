{"ast":null,"code":"// src/components/Notes.js\nimport React,{useState,useEffect}from\"react\";import{motion}from\"framer-motion\";import styled from\"styled-components\";import{v4 as uuidv4}from\"uuid\";import{toast}from\"react-toastify\";// Стили\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Container=styled.div`\n  padding: 20px;\n`;const TextArea=styled.textarea`\n  width: 100%;\n  height: 100px;\n  padding: 10px;\n  margin-bottom: 10px;\n  border: 1px solid #d2d2d7;\n  border-radius: 8px;\n  font-size: 16px;\n  resize: none;\n\n  @media (max-width: 768px) {\n    height: 80px;\n    font-size: 14px;\n  }\n`;const Button=styled.button`\n  width: 100%;\n  padding: 10px;\n  background-color: #007aff;\n  color: white;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  font-size: 16px;\n  margin-bottom: 10px;\n\n  &:hover {\n    background-color: #005bb5;\n  }\n\n  @media (max-width: 768px) {\n    font-size: 14px;\n  }\n`;const NoteContainer=styled(motion.div)`\n  background-color: #fff;\n  border: 1px solid #d2d2d7;\n  border-radius: 8px;\n  padding: 15px;\n  margin-bottom: 10px;\n  position: relative;\n`;const DeleteButton=styled.button`\n  background-color: #ff453a;\n  color: white;\n  border: none;\n  padding: 8px 12px;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 14px;\n  position: absolute;\n  top: 10px;\n  right: 10px;\n\n  &:hover {\n    background-color: #c0392b;\n  }\n`;// Компонент\nconst Notes=()=>{const[notes,setNotes]=useState([]);const[newNote,setNewNote]=useState(\"\");// Загрузка заметок из localStorage\nuseEffect(()=>{const savedNotes=JSON.parse(localStorage.getItem(\"notes\"))||[];setNotes(savedNotes);},[]);// Сохранение заметок в localStorage\nuseEffect(()=>{localStorage.setItem(\"notes\",JSON.stringify(notes));},[notes]);// Добавление заметки\nconst addNote=()=>{if(newNote.trim()===\"\"){toast.error(\"Заметка не может быть пустой\");return;}const newNoteObj={id:uuidv4(),text:newNote};setNotes([...notes,newNoteObj]);setNewNote(\"\");toast.success(\"Заметка добавлена!\");};// Удаление заметки\nconst deleteNote=id=>{const updatedNotes=notes.filter(note=>note.id!==id);setNotes(updatedNotes);toast.info(\"Заметка удалена\");};return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u041C\\u043E\\u0438 \\u0437\\u0430\\u043C\\u0435\\u0442\\u043A\\u0438\"}),/*#__PURE__*/_jsx(TextArea,{value:newNote,onChange:e=>setNewNote(e.target.value),placeholder:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0442\\u0435\\u043A\\u0441\\u0442 \\u0437\\u0430\\u043C\\u0435\\u0442\\u043A\\u0438...\"}),/*#__PURE__*/_jsx(Button,{onClick:addNote,children:\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0437\\u0430\\u043C\\u0435\\u0442\\u043A\\u0443\"}),/*#__PURE__*/_jsx(\"div\",{children:notes.map(note=>/*#__PURE__*/_jsxs(NoteContainer,{initial:{opacity:0,y:-20},animate:{opacity:1,y:0},transition:{duration:0.3},children:[/*#__PURE__*/_jsx(\"p\",{children:note.text}),/*#__PURE__*/_jsx(DeleteButton,{onClick:()=>deleteNote(note.id),children:\"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"})]},note.id))})]});};export default Notes;","map":{"version":3,"names":["React","useState","useEffect","motion","styled","v4","uuidv4","toast","jsx","_jsx","jsxs","_jsxs","Container","div","TextArea","textarea","Button","button","NoteContainer","DeleteButton","Notes","notes","setNotes","newNote","setNewNote","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify","addNote","trim","error","newNoteObj","id","text","success","deleteNote","updatedNotes","filter","note","info","children","value","onChange","e","target","placeholder","onClick","map","initial","opacity","y","animate","transition","duration"],"sources":["C:/Users/Max/OneDrive/Desktop/ProjectM/ercov/notes-app/frontend/src/components/Notes.js"],"sourcesContent":["// src/components/Notes.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport styled from \"styled-components\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n// Стили\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TextArea = styled.textarea`\r\n  width: 100%;\r\n  height: 100px;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n  border: 1px solid #d2d2d7;\r\n  border-radius: 8px;\r\n  font-size: 16px;\r\n  resize: none;\r\n\r\n  @media (max-width: 768px) {\r\n    height: 80px;\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #007aff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  margin-bottom: 10px;\r\n\r\n  &:hover {\r\n    background-color: #005bb5;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nconst NoteContainer = styled(motion.div)`\r\n  background-color: #fff;\r\n  border: 1px solid #d2d2d7;\r\n  border-radius: 8px;\r\n  padding: 15px;\r\n  margin-bottom: 10px;\r\n  position: relative;\r\n`;\r\n\r\nconst DeleteButton = styled.button`\r\n  background-color: #ff453a;\r\n  color: white;\r\n  border: none;\r\n  padding: 8px 12px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n\r\n  &:hover {\r\n    background-color: #c0392b;\r\n  }\r\n`;\r\n\r\n// Компонент\r\nconst Notes = () => {\r\n  const [notes, setNotes] = useState([]);\r\n  const [newNote, setNewNote] = useState(\"\");\r\n\r\n  // Загрузка заметок из localStorage\r\n  useEffect(() => {\r\n    const savedNotes = JSON.parse(localStorage.getItem(\"notes\")) || [];\r\n    setNotes(savedNotes);\r\n  }, []);\r\n\r\n  // Сохранение заметок в localStorage\r\n  useEffect(() => {\r\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\r\n  }, [notes]);\r\n\r\n  // Добавление заметки\r\n  const addNote = () => {\r\n    if (newNote.trim() === \"\") {\r\n      toast.error(\"Заметка не может быть пустой\");\r\n      return;\r\n    }\r\n\r\n    const newNoteObj = { id: uuidv4(), text: newNote };\r\n    setNotes([...notes, newNoteObj]);\r\n    setNewNote(\"\");\r\n    toast.success(\"Заметка добавлена!\");\r\n  };\r\n\r\n  // Удаление заметки\r\n  const deleteNote = (id) => {\r\n    const updatedNotes = notes.filter((note) => note.id !== id);\r\n    setNotes(updatedNotes);\r\n    toast.info(\"Заметка удалена\");\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h2>Мои заметки</h2>\r\n      <TextArea\r\n        value={newNote}\r\n        onChange={(e) => setNewNote(e.target.value)}\r\n        placeholder=\"Введите текст заметки...\"\r\n      />\r\n      <Button onClick={addNote}>Добавить заметку</Button>\r\n\r\n      <div>\r\n        {notes.map((note) => (\r\n          <NoteContainer\r\n            key={note.id}\r\n            initial={{ opacity: 0, y: -20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ duration: 0.3 }}\r\n          >\r\n            <p>{note.text}</p>\r\n            <DeleteButton onClick={() => deleteNote(note.id)}>Удалить</DeleteButton>\r\n          </NoteContainer>\r\n        ))}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Notes;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Max\\\\OneDrive\\\\Desktop\\\\ProjectM\\\\ercov\\\\notes-app\\\\src\\\\components\\\\FileManager.js\",\n  _s = $RefreshSig$();\n// src/components/FileManager.js\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileManager = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  // Загрузка всех файлов из базы данных\n  useEffect(() => {\n    const fetchFiles = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3001/files\");\n        setFiles(response.data);\n      } catch (error) {\n        toast.error(\"Ошибка при загрузке файлов: \" + error.message);\n      }\n    };\n    fetchFiles();\n  }, []);\n\n  // Обработка выбора файла\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file && file.size > 5 * 1024 * 1024) {\n      toast.error(\"Файл слишком большой! Максимальный размер: 5 МБ.\");\n      return;\n    }\n    setSelectedFile(file);\n  };\n\n  // Загрузка файла на сервер\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      toast.error(\"Выберите файл для загрузки\");\n      return;\n    }\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", selectedFile);\n\n      // Отправляем файл на сервер\n      const response = await axios.post(\"http://localhost:3001/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n\n      // Сохраняем информацию о файле в базе данных\n      await axios.post(\"http://localhost:3001/files\", {\n        name: selectedFile.name,\n        url: response.data.url\n      });\n      toast.success(\"Файл успешно загружен!\");\n      setSelectedFile(null);\n      window.location.reload(); // Обновляем список файлов\n    } catch (error) {\n      toast.error(\"Ошибка при загрузке файла: \" + error.message);\n    }\n  };\n\n  // Удаление файла\n  const handleDeleteFile = async (id, name) => {\n    try {\n      // Удаляем файл с сервера\n      await axios.delete(`http://localhost:3001/delete-file/${name}`);\n\n      // Удаляем файл из базы данных\n      await axios.delete(`http://localhost:3001/files/${id}`);\n      toast.success(\"Файл удален!\");\n      window.location.reload(); // Обновляем список файлов\n    } catch (error) {\n      toast.error(\"Ошибка при удалении файла: \" + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u041C\\u0435\\u043D\\u0435\\u0434\\u0436\\u0435\\u0440 \\u0444\\u0430\\u0439\\u043B\\u043E\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0444\\u0430\\u0439\\u043B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: files.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u041D\\u0435\\u0442 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0436\\u0435\\u043D\\u043D\\u044B\\u0445 \\u0444\\u0430\\u0439\\u043B\\u043E\\u0432.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this) : files.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: file.url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteFile(file.id, file.name),\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this)]\n      }, file.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(FileManager, \"tOQ9b1DtUADMqDwW1afLWDOagMI=\");\n_c = FileManager;\nexport default FileManager;\nvar _c;\n$RefreshReg$(_c, \"FileManager\");","map":{"version":3,"names":["React","useState","useEffect","axios","toast","jsxDEV","_jsxDEV","FileManager","_s","files","setFiles","selectedFile","setSelectedFile","fetchFiles","response","get","data","error","message","handleFileChange","e","file","target","size","handleUpload","formData","FormData","append","post","headers","name","url","success","window","location","reload","handleDeleteFile","id","delete","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","length","map","href","rel","_c","$RefreshReg$"],"sources":["C:/Users/Max/OneDrive/Desktop/ProjectM/ercov/notes-app/src/components/FileManager.js"],"sourcesContent":["// src/components/FileManager.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst FileManager = () => {\r\n  const [files, setFiles] = useState([]);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n  // Загрузка всех файлов из базы данных\r\n  useEffect(() => {\r\n    const fetchFiles = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:3001/files\");\r\n        setFiles(response.data);\r\n      } catch (error) {\r\n        toast.error(\"Ошибка при загрузке файлов: \" + error.message);\r\n      }\r\n    };\r\n    fetchFiles();\r\n  }, []);\r\n\r\n  // Обработка выбора файла\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file && file.size > 5 * 1024 * 1024) {\r\n      toast.error(\"Файл слишком большой! Максимальный размер: 5 МБ.\");\r\n      return;\r\n    }\r\n    setSelectedFile(file);\r\n  };\r\n\r\n  // Загрузка файла на сервер\r\n  const handleUpload = async () => {\r\n    if (!selectedFile) {\r\n      toast.error(\"Выберите файл для загрузки\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", selectedFile);\r\n\r\n      // Отправляем файл на сервер\r\n      const response = await axios.post(\"http://localhost:3001/upload\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      });\r\n\r\n      // Сохраняем информацию о файле в базе данных\r\n      await axios.post(\"http://localhost:3001/files\", {\r\n        name: selectedFile.name,\r\n        url: response.data.url,\r\n      });\r\n\r\n      toast.success(\"Файл успешно загружен!\");\r\n      setSelectedFile(null);\r\n      window.location.reload(); // Обновляем список файлов\r\n    } catch (error) {\r\n      toast.error(\"Ошибка при загрузке файла: \" + error.message);\r\n    }\r\n  };\r\n\r\n  // Удаление файла\r\n  const handleDeleteFile = async (id, name) => {\r\n    try {\r\n      // Удаляем файл с сервера\r\n      await axios.delete(`http://localhost:3001/delete-file/${name}`);\r\n\r\n      // Удаляем файл из базы данных\r\n      await axios.delete(`http://localhost:3001/files/${id}`);\r\n\r\n      toast.success(\"Файл удален!\");\r\n      window.location.reload(); // Обновляем список файлов\r\n    } catch (error) {\r\n      toast.error(\"Ошибка при удалении файла: \" + error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Менеджер файлов</h2>\r\n\r\n      {/* Загрузка файла */}\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <button onClick={handleUpload}>Загрузить файл</button>\r\n\r\n      {/* Список файлов */}\r\n      <div>\r\n        {files.length === 0 ? (\r\n          <p>Нет загруженных файлов.</p>\r\n        ) : (\r\n          files.map((file) => (\r\n            <div key={file.id}>\r\n              <a href={file.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                {file.name}\r\n              </a>\r\n              <button onClick={() => handleDeleteFile(file.id, file.name)}>Удалить</button>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// src/components/FileManager.js\nimport React,{useState,useEffect}from\"react\";import axios from\"axios\";import{toast}from\"react-toastify\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const FileManager=()=>{const[files,setFiles]=useState([]);const[selectedFile,setSelectedFile]=useState(null);// Загрузка всех файлов из базы данных\nuseEffect(()=>{const fetchFiles=async()=>{try{const response=await axios.get(\"http://localhost:3001/files\");setFiles(response.data);}catch(error){toast.error(\"Ошибка при загрузке файлов: \"+error.message);}};fetchFiles();},[]);// Обработка выбора файла\nconst handleFileChange=e=>{const file=e.target.files[0];if(file&&file.size>5*1024*1024){toast.error(\"Файл слишком большой! Максимальный размер: 5 МБ.\");return;}setSelectedFile(file);};// Загрузка файла на сервер\nconst handleUpload=async()=>{if(!selectedFile){toast.error(\"Выберите файл для загрузки\");return;}try{const formData=new FormData();formData.append(\"file\",selectedFile);// Отправляем файл на сервер\nconst response=await axios.post(\"http://localhost:3001/upload\",formData,{headers:{\"Content-Type\":\"multipart/form-data\"}});// Сохраняем информацию о файле в базе данных\nawait axios.post(\"http://localhost:3001/files\",{name:selectedFile.name,url:response.data.url});// Обновляем список файлов без перезагрузки страницы\nsetFiles(prevFiles=>[...prevFiles,{id:Date.now(),name:selectedFile.name,url:response.data.url}]);toast.success(\"Файл успешно загружен!\");setSelectedFile(null);}catch(error){toast.error(\"Ошибка при загрузке файла: \"+error.message);}};// Удаление файла\nconst handleDeleteFile=async(id,name)=>{try{// Удаляем файл с сервера\nawait axios.delete(`http://localhost:3001/delete-file/${name}`);// Удаляем файл из базы данных\nawait axios.delete(`http://localhost:3001/files/${id}`);// Обновляем список файлов без перезагрузки страницы\nsetFiles(prevFiles=>prevFiles.filter(file=>file.id!==id));toast.success(\"Файл удален!\");}catch(error){toast.error(\"Ошибка при удалении файла: \"+error.message);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u041C\\u0435\\u043D\\u0435\\u0434\\u0436\\u0435\\u0440 \\u0444\\u0430\\u0439\\u043B\\u043E\\u0432\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:handleFileChange}),/*#__PURE__*/_jsx(\"button\",{onClick:handleUpload,children:\"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0444\\u0430\\u0439\\u043B\"}),/*#__PURE__*/_jsx(\"div\",{children:files.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"\\u041D\\u0435\\u0442 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0436\\u0435\\u043D\\u043D\\u044B\\u0445 \\u0444\\u0430\\u0439\\u043B\\u043E\\u0432.\"}):files.map(file=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"a\",{href:file.url,target:\"_blank\",rel:\"noopener noreferrer\",children:file.name}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDeleteFile(file.id,file.name),children:\"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"})]},file.id))})]});};export default FileManager;","map":{"version":3,"names":["React","useState","useEffect","axios","toast","jsx","_jsx","jsxs","_jsxs","FileManager","files","setFiles","selectedFile","setSelectedFile","fetchFiles","response","get","data","error","message","handleFileChange","e","file","target","size","handleUpload","formData","FormData","append","post","headers","name","url","prevFiles","id","Date","now","success","handleDeleteFile","delete","filter","children","type","onChange","onClick","length","map","href","rel"],"sources":["C:/Users/Max/OneDrive/Desktop/ProjectM/ercov/notes-app/src/components/FileManager.js"],"sourcesContent":["// src/components/FileManager.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst FileManager = () => {\r\n  const [files, setFiles] = useState([]);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n  // Загрузка всех файлов из базы данных\r\n  useEffect(() => {\r\n    const fetchFiles = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:3001/files\");\r\n        setFiles(response.data);\r\n      } catch (error) {\r\n        toast.error(\"Ошибка при загрузке файлов: \" + error.message);\r\n      }\r\n    };\r\n    fetchFiles();\r\n  }, []);\r\n\r\n  // Обработка выбора файла\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file && file.size > 5 * 1024 * 1024) {\r\n      toast.error(\"Файл слишком большой! Максимальный размер: 5 МБ.\");\r\n      return;\r\n    }\r\n    setSelectedFile(file);\r\n  };\r\n\r\n  // Загрузка файла на сервер\r\n  const handleUpload = async () => {\r\n    if (!selectedFile) {\r\n      toast.error(\"Выберите файл для загрузки\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", selectedFile);\r\n\r\n      // Отправляем файл на сервер\r\n      const response = await axios.post(\"http://localhost:3001/upload\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      });\r\n\r\n      // Сохраняем информацию о файле в базе данных\r\n      await axios.post(\"http://localhost:3001/files\", {\r\n        name: selectedFile.name,\r\n        url: response.data.url,\r\n      });\r\n\r\n      // Обновляем список файлов без перезагрузки страницы\r\n      setFiles((prevFiles) => [\r\n        ...prevFiles,\r\n        { id: Date.now(), name: selectedFile.name, url: response.data.url },\r\n      ]);\r\n\r\n      toast.success(\"Файл успешно загружен!\");\r\n      setSelectedFile(null);\r\n    } catch (error) {\r\n      toast.error(\"Ошибка при загрузке файла: \" + error.message);\r\n    }\r\n  };\r\n\r\n  // Удаление файла\r\n  const handleDeleteFile = async (id, name) => {\r\n    try {\r\n      // Удаляем файл с сервера\r\n      await axios.delete(`http://localhost:3001/delete-file/${name}`);\r\n\r\n      // Удаляем файл из базы данных\r\n      await axios.delete(`http://localhost:3001/files/${id}`);\r\n\r\n      // Обновляем список файлов без перезагрузки страницы\r\n      setFiles((prevFiles) => prevFiles.filter((file) => file.id !== id));\r\n\r\n      toast.success(\"Файл удален!\");\r\n    } catch (error) {\r\n      toast.error(\"Ошибка при удалении файла: \" + error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Менеджер файлов</h2>\r\n\r\n      {/* Загрузка файла */}\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <button onClick={handleUpload}>Загрузить файл</button>\r\n\r\n      {/* Список файлов */}\r\n      <div>\r\n        {files.length === 0 ? (\r\n          <p>Нет загруженных файлов.</p>\r\n        ) : (\r\n          files.map((file) => (\r\n            <div key={file.id}>\r\n              <a href={file.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                {file.name}\r\n              </a>\r\n              <button onClick={() => handleDeleteFile(file.id, file.name)}>Удалить</button>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}